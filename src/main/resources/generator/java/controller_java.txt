package ${table.controllerPackageName};

import artoria.beans.BeanUtils;
import artoria.common.Param;
import artoria.common.Result;
import artoria.util.PagingUtils;
import ${table.entityPackageName}.${table.entityClassName};
import ${table.voPackageName}.${table.voClassName};
import ${table.servicePackageName}.${table.serviceClassName};
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import java.util.ArrayList;
import java.util.List;

/**
 * ${table.controllerClassName}.
 * @author $!{author}
 */
@Controller
public class ${table.controllerClassName} {

    /* (Start) This will be covered, please do not modify. */

    @Autowired
    private ${table.serviceClassName} ${table.serviceObjectName};
    /* (End) This will be covered, please do not modify. */
    /* Generated by artoria-extend in ${generatedTime}. */

    @ResponseBody
    @RequestMapping(value = "/${table.entityClassName}/insertSelective", method = RequestMethod.POST)
    public Result<Boolean> insertSelective(@RequestBody ${table.voClassName} ${table.voObjectName}) {
        int effect = ${table.serviceObjectName}.insertSelective(
                BeanUtils.beanToBean(${table.voObjectName}, ${table.entityClassName}.class));
        return new Result<Boolean>(effect == 1);
    }

    @ResponseBody
    @RequestMapping(value = "/${table.entityClassName}/deleteByPrimaryKey", method = RequestMethod.POST)
    public Result<Boolean> deleteByPrimaryKey(@RequestBody ${table.voClassName} ${table.voObjectName}) {
        int effect = ${table.serviceObjectName}.deleteByPrimaryKey(#set($temp = 0)
#foreach(${column} in ${table.columnList})#if($column.primaryKey)#if($temp > 0), #set($temp = $temp + 1)#end#*
*#${table.voObjectName}.${column.getterName}()#end#end);
        return new Result<Boolean>(effect == 1);
    }

    @ResponseBody
    @RequestMapping(value = "/${table.entityClassName}/updateByPrimaryKey", method = RequestMethod.POST)
    public Result<Boolean> updateByPrimaryKey(@RequestBody ${table.voClassName} ${table.voObjectName}) {
        int effect = ${table.serviceObjectName}.updateByPrimaryKey(
                BeanUtils.beanToBean(${table.voObjectName}, ${table.entityClassName}.class));
        return new Result<Boolean>(effect == 1);
    }

    @ResponseBody
    @RequestMapping(value = "/${table.entityClassName}/queryByPrimaryKey", method = RequestMethod.POST)
    public Result<${table.voClassName}> queryByPrimaryKey(@RequestBody ${table.voClassName} ${table.voObjectName}) {
        ${table.entityClassName} record =
                ${table.serviceObjectName}.queryByPrimaryKey(#set($temp = 0)
#foreach(${column} in ${table.columnList})#if($column.primaryKey)#if($temp > 0), #set($temp = $temp + 1)#end#*
*#${table.voObjectName}.${column.getterName}()#end#end);
        return new Result<${table.voClassName}>(record != null
                ? BeanUtils.beanToBean(record, ${table.voClassName}.class) : null);
    }

    @ResponseBody
    @RequestMapping(value = "/${table.entityClassName}/querySelective", method = RequestMethod.POST)
    public Result<List<${table.voClassName}>> querySelective(@RequestBody ${table.voClassName} ${table.voObjectName}) {
        Param<${table.entityClassName}> param = new Param<${table.entityClassName}>();
        param.setData(BeanUtils.beanToBean(${table.voObjectName}, ${table.entityClassName}.class));
        Result<List<${table.entityClassName}>> queryResult = ${table.serviceObjectName}.querySelective(param);
        return PagingUtils.handleResult(queryResult, ${table.voClassName}.class);
    }

}
