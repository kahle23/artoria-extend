package ${table.servicePackageName};

import artoria.common.Param;
import artoria.common.Result;
import ${table.entityPackageName}.${table.entityClassName};

import java.util.List;

/**
 * ${table.serviceClassName}.
 * @author $!{author}
 */
public interface ${table.serviceClassName} {

    /* (Start) This will be covered, please do not modify. */

    int insert(${table.entityClassName} record);

    int insertBatch(List<${table.entityClassName}> recordList);

    int insertSelective(${table.entityClassName} record);

    int deleteByPrimaryKey(#set($temp = 0)
#foreach(${column} in ${table.columnList})
#if($column.primaryKey)
#if($temp > 0), #set($temp = $temp + 1)#end#*
*#${column.javaType} ${column.fieldName}#end
#end);

    int deleteByPrimaryKeyList(#set($temp = 0)
#foreach(${column} in ${table.columnList})
#if($column.primaryKey)
#if($temp > 0), #set($temp = $temp + 1)#end#*
*#List<${column.javaType}> ${column.fieldName}List#end
#end);

    int deleteSelective(${table.entityClassName} record);

    int updateByPrimaryKey(${table.entityClassName} record);

    int updateByPrimaryKeySelective(${table.entityClassName} record);

    int countSelective(${table.entityClassName} record);

    ${table.entityClassName} queryByPrimaryKey(#set($temp = 0)
#foreach(${column} in ${table.columnList})
#if($column.primaryKey)
#if($temp > 0), #set($temp = $temp + 1)#end#*
*#${column.javaType} ${column.fieldName}#end
#end);

    List<${table.entityClassName}> queryByPrimaryKeyList(#set($temp = 0)
#foreach(${column} in ${table.columnList})
#if($column.primaryKey)
#if($temp > 0), #set($temp = $temp + 1)#end#*
*#List<${column.javaType}> ${column.fieldName}List#end
#end);

    Result<List<${table.entityClassName}>> querySelective(Param<${table.entityClassName}> param);
    /* (End) This will be covered, please do not modify. */
    /* Generated by artoria-extend in ${generatedTime}. */

}
