package ${tableInfo.controllerPackageName};

import artoria.beans.BeanUtils;
import artoria.common.Param;
import artoria.common.Result;
import ${tableInfo.voPackageName}.${tableInfo.voClassName};
import ${tableInfo.servicePackageName}.${tableInfo.serviceClassName};
import ${tableInfo.dtoPackageName}.${tableInfo.dtoClassName};
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import java.util.ArrayList;
import java.util.List;

/**
 * ${tableInfo.controllerClassName}.
 * @author $!{author}
 */
@Controller
public class ${tableInfo.controllerClassName} {

    /* (Start) This will be covered, please do not modify. */

    @Autowired
    private ${tableInfo.serviceClassName} ${tableInfo.serviceObjectName};
    /* (End) This will be covered, please do not modify. */
    /* Generated by artoria-extend in ${generatedTime}. */

    @ResponseBody
    @RequestMapping(value = "/${tableInfo.entityClassName}/querySelective", method = RequestMethod.POST)
    public Result<List<${tableInfo.voClassName}>> querySelective(@RequestBody ${tableInfo.voClassName} ${tableInfo.voObjectName}) {
        ${tableInfo.dtoClassName} ${tableInfo.dtoObjectName} = ${tableInfo.voObjectName} != null
                ? BeanUtils.beanToBean(${tableInfo.voObjectName}, ${tableInfo.dtoClassName}.class)
                : new ${tableInfo.dtoClassName}();
        Param<${tableInfo.dtoClassName}> param = new Param<${tableInfo.dtoClassName}>();
        param.setData(${tableInfo.dtoObjectName});
        Result<List<${tableInfo.dtoClassName}>> listResult = ${tableInfo.serviceObjectName}.querySelective(param);
        Result<List<${tableInfo.voClassName}>> result = new Result<List<${tableInfo.voClassName}>>();
        BeanUtils.copy(listResult, result);
        result.setData(listResult.getData() != null
                ? BeanUtils.beanToBeanInList(listResult.getData(), ${tableInfo.voClassName}.class)
                : new ArrayList<${tableInfo.voClassName}>());
        return result;
    }

}
